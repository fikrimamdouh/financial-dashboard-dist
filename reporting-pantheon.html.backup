<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>مرصد Polaris للحكمة والمعايير الحية</title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

    <style>
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Tajawal:wght@400;500;700&display=swap'  );
        :root { --font-family-main: 'Tajawal', sans-serif; --font-family-display: 'Orbitron', sans-serif; --color-primary-glow: #00BFFF; --color-bg: #010409; --color-surface: rgba(13, 17, 23, 0.8); --color-border: rgba(56, 139, 253, 0.3); --color-text-primary: #E6EDF3; --color-text-secondary: #7D8590; }
        body { font-family: var(--font-family-main); direction: rtl; background-color: var(--color-bg); color: var(--color-text-primary); display: flex; }
        .grid-background { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-image: linear-gradient(to right, rgba(56, 139, 253, 0.1) 1px, transparent 1px), linear-gradient(to bottom, rgba(56, 139, 253, 0.1) 1px, transparent 1px); background-size: 40px 40px; z-index: -2; }
        .glow-background { position: fixed; top: 50%; left: 50%; width: 800px; height: 800px; background: radial-gradient(circle, rgba(0, 191, 255, 0.1), transparent 60%); transform: translate(-50%, -50%); animation: pulse 10s infinite ease-in-out; z-index: -1; }
        @keyframes pulse { 0%, 100% { transform: translate(-50%, -50%) scale(1); opacity: 0.5; } 50% { transform: translate(-50%, -50%) scale(1.2); opacity: 0.8; } }
        .sidebar { width: 80px; height: 100vh; background-color: var(--color-surface); border-left: 1px solid var(--color-border); backdrop-filter: blur(10px); display: flex; flex-direction: column; align-items: center; padding: 1.5rem 0; flex-shrink: 0; position: sticky; top: 0; }
        .app-logo { color: var(--color-primary-glow); font-size: 2rem; margin-bottom: 2.5rem; }
        .main-content { flex-grow: 1; padding: 2rem 3rem; overflow-y: auto; height: 100vh; }
        .page-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem; }
        .page-title { font-family: var(--font-family-display); font-size: 2.5rem; margin: 0; }
        
        .pantheon-wing { background-color: var(--color-surface); border: 1px solid var(--color-border); border-radius: 12px; padding: 1.5rem; margin-bottom: 2rem; backdrop-filter: blur(5px); }
        .wing-header { display: flex; align-items: center; gap: 1rem; margin-bottom: 1.5rem; padding-bottom: 1rem; border-bottom: 1px solid var(--color-border); }
        .wing-icon { font-size: 2rem; color: var(--color-primary-glow); text-shadow: 0 0 10px var(--color-primary-glow); }
        .wing-title { font-family: var(--font-family-display); font-size: 1.5rem; margin: 0; }
        .wing-subtitle { color: var(--color-text-secondary); margin: 0; }
        .report-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 1rem; }
        .report-card { background-color: rgba(0,0,0,0.2); border: 1px solid transparent; padding: 1rem; border-radius: 8px; transition: all 0.3s ease; cursor: pointer; }
        .report-card:hover { transform: translateY(-5px); border-color: var(--color-primary-glow); background-color: rgba(0, 191, 255, 0.05); }
        .report-card h6 { margin-bottom: 0.25rem; }
        .report-card p { font-size: 0.85rem; color: var(--color-text-secondary); margin-bottom: 0; }
        .compliance-wing { border-color: var(--color-primary-glow); box-shadow: 0 0 20px rgba(0, 191, 255, 0.2); animation: glow-border 2s infinite alternate; }
        @keyframes glow-border { from { box-shadow: 0 0 10px rgba(0, 191, 255, 0.1); } to { box-shadow: 0 0 30px rgba(0, 191, 255, 0.4); } }
        
        /* Modal Styles from polaris-theme.css for self-containment */
        .modal-content { background-color: var(--color-surface); border: 1px solid var(--color-border); color: var(--color-text-primary); backdrop-filter: blur(15px); border-radius: 12px; }
        .modal-header, .modal-footer { border-color: var(--color-border); }
        .btn-close { filter: invert(1) grayscale(100%) brightness(200%); }
    </style>
</head>
<body class="polaris-body">

    <div class="grid-background"></div>
    <div class="glow-background"></div>

    <nav class="sidebar">
        <a href="index.html" class="app-logo" title="Polaris"><i class="fas fa-atom"></i></a>
    </nav>

    <main class="main-content">
        <div class="page-header">
            <h1 class="page-title">ديوان الحكمة المالية</h1>
        </div>

        <!-- Compliance Wing (Appears only when needed) -->
        <div class="pantheon-wing compliance-wing">
            <div class="wing-header">
                <i class="wing-icon fas fa-satellite-dish"></i>
                <div>
                    <h3 class="wing-title">مرصد المعايير الحية</h3>
                    <p class="wing-subtitle">تم رصد تحديث جديد في المعايير الدولية (IFRS 18). النظام جاهز لمساعدتك على التوافق.</p>
                </div>
            </div>
            <div class="report-grid">
                <div id="report-compliance-simulator" class="report-card"><h6><i class="fas fa-vial"></i> محاكي الأثر</h6><p>شاهد كيف ستبدو قوائمك المالية لو تم تطبيق المعيار الجديد.</p></div>
                <div id="report-compliance-checklist" class="report-card"><h6><i class="fas fa-tasks"></i> قائمة التحقق للتطبيق</h6><p>قائمة مهام تفصيلية توجهك خطوة بخطوة لتطبيق المتطلبات الجديدة.</p></div>
                <div id="report-compliance-disclosures" class="report-card"><h6><i class="fas fa-file-alt"></i> مولد الإفصاحات الانتقالية</h6><p>صياغة آلية للإيضاحات المطلوبة لشرح أثر تطبيق المعيار الجديد.</p></div>
            </div>
        </div>

        <!-- Sovereign Reports Wing -->
        <div class="pantheon-wing">
            <div class="wing-header">
                <i class="wing-icon fas fa-gavel"></i>
                <div>
                    <h3 class="wing-title">جناح التقارير السيادية</h3>
                    <p class="wing-subtitle">الوضع الرسمي والقانوني للكيان أمام الجهات الخارجية.</p>
                </div>
            </div>
            <div class="report-grid">
                <div id="report-sovereign-fs" class="report-card"><h6>القوائم المالية الأساسية</h6><p>المركز المالي، الدخل الشامل، حقوق الملكية، التدفقات النقدية.</p></div>
                <div id="report-sovereign-notes" class="report-card"><h6>الإيضاحات المتممة</h6><p>توليد آلي للإيضاحات بناءً على الأحداث المسجلة.</p></div>
                <div id="report-sovereign-audit" class="report-card"><h6>تقرير المراجع المستقل</h6><p>قوالب لجميع أنواع الرأي (غير متحفظ، متحفظ، ...).</p></div>
                <div id="report-sovereign-zakat" class="report-card"><h6>الإقرار الزكوي النهائي</h6><p>النسخة النهائية المعتمدة من الإقرار الزكوي.</p></div>
                <div id="report-sovereign-vat" class="report-card"><h6>إقرار ضريبة القيمة المضافة</h6><p>النسخة النهائية المعتمدة من إقرار ق.م.</p></div>
            </div>
        </div>

        <!-- Financial Diagnostics Wing -->
        <div class="pantheon-wing">
            <div class="wing-header">
                <i class="wing-icon fas fa-stethoscope"></i>
                <div>
                    <h3 class="wing-title">جناح التشخيص المالي</h3>
                    <p class="wing-subtitle">قياس صحة وسلامة الشركة من الداخل.</p>
                </div>
            </div>
            <div class="report-grid">
                <div id="report-diag-analysis" class="report-card"><h6>تقرير التحليل المالي الشامل</h6><p>تحليل السيولة، الربحية، الكفاءة، والرفع المالي.</p></div>
                <div id="report-diag-trends" class="report-card"><h6>تقرير تحليل الاتجاهات</h6><p>تطور المؤشرات الرئيسية على مدار 5 سنوات أو 12 ربعًا.</p></div>
                <div id="report-diag-vertical" class="report-card"><h6>التحليل الرأسي والأفقي</h6><p>مقارنة البنود كنسبة من الإجمالي أو مقارنة مع فترات سابقة.</p></div>
            </div>
        </div>

        <!-- Strategic Foresight Wing -->
        <div class="pantheon-wing">
            <div class="wing-header">
                <i class="wing-icon fas fa-chess-queen"></i>
                <div>
                    <h3 class="wing-title">جناح الرؤية الاستراتيجية</h3>
                    <p class="wing-subtitle">أدوات تساعد الإدارة على اتخاذ قرارات مستقبلية.</p>
                </div>
            </div>
            <div class="report-grid">
                <div id="report-strategic-whatif" class="report-card"><h6>تحليل "ماذا لو"</h6><p>محاكاة تأثير قرارات مثل زيادة الأسعار أو خفض التكاليف.</p></div>
                <div id="report-strategic-breakeven" class="report-card"><h6>تقرير نقطة التعادل</h6><p>تحديد حجم المبيعات المطلوب لتغطية جميع التكاليف.</p></div>
                <div id="report-strategic-cashflow" class="report-card"><h6>التدفقات النقدية المتوقعة</h6><p>توقع وضع السيولة في المستقبل بناءً على الاتجاهات الحالية.</p></div>
            </div>
        </div>

        <!-- Internal Control Wing -->
        <div class="pantheon-wing">
            <div class="wing-header">
                <i class="wing-icon fas fa-shield-alt"></i>
                <div>
                    <h3 class="wing-title">جناح الرقابة والتدقيق الداخلي</h3>
                    <p class="wing-subtitle">كشف المخاطر ونقاط الضعف في العمليات الداخلية.</p>
                </div>
            </div>
            <div class="report-grid">
                <div id="report-control-aging" class="report-card"><h6>تقرير أعمار الذمم</h6><p>تصنيف ديون العملاء والموردين حسب فترة تأخرها.</p></div>
                <div id="report-control-expenses" class="report-card"><h6>تحليل المصروفات الاستثنائية</h6><p>تسليط الضوء على أي مصروفات غير عادية أو متكررة.</p></div>
                <div id="report-control-log" class="report-card"><h6>سجل التعديلات والقيود</h6><p>عرض جميع قيود التسوية والتصحيح التي تم إجراؤها.</p></div>
            </div>
        </div>

    </main>

    <!-- Modal for displaying generated reports -->
    <div class="modal fade" id="reportModal" tabindex="-1">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reportModalTitle"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="reportModalBody">
                    <!-- Report content will be injected here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">إغلاق</button>
                    <button type="button" class="btn btn-primary" onclick="window.print()"><i class="fas fa-print me-2"></i>طباعة التقرير</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function( ) {
            const reportModal = new bootstrap.Modal(document.getElementById('reportModal'));
            
            document.querySelectorAll('.report-card').forEach(card => {
                card.addEventListener('click', function() {
                    generateReport(this.id, this.querySelector('h6').innerText);
                });
            });

            function generateReport(reportId, title) {
                const modalTitleEl = document.getElementById('reportModalTitle');
                const modalBodyEl = document.getElementById('reportModalBody');
                modalTitleEl.textContent = title;

                const activeClientId = localStorage.getItem('activeClientId');
                if (!activeClientId) {
                    modalBodyEl.innerHTML = generateErrorHTML('لا يوجد عميل نشط', 'الرجاء اختيار عميل أولاً من بروتوكول التأسيس لتوليد التقارير.', 'company-setup.html');
                    reportModal.show();
                    return;
                }

                const savedAuditFile = localStorage.getItem(`polarisAuditFile_${activeClientId}`);
                if (!savedAuditFile) {
                    modalBodyEl.innerHTML = generateErrorHTML('بيانات المراجعة غير موجودة', 'الرجاء إكمال عملية المراجعة واعتماد الميزان في صفحة "ملف المراجعة الإلكتروني" أولاً.', 'review-deck.html');
                    reportModal.show();
                    return;
                }

                const auditFile = JSON.parse(savedAuditFile);
                const isFinalized = auditFile.finalizedEntities.includes(auditFile.activeEntityId);
                
                // بعض التقارير (مثل الرقابية) يمكن عرضها قبل الاعتماد النهائي
                const requiresFinalization = reportId.startsWith('report-sovereign');
                if (requiresFinalization && !isFinalized) {
                     modalBodyEl.innerHTML = generateErrorHTML('الميزان لم يتم اعتماده', 'يجب اعتماد ميزان المراجعة النهائي في صفحة "ملف المراجعة الإلكتروني" قبل توليد التقارير السيادية.', 'review-deck.html');
                    reportModal.show();
                    return;
                }
                
                const tbData = getFinalTrialBalance(auditFile);
                const prevTbData = getPreviousTrialBalance(auditFile);
                let reportContent = '';

                switch (reportId) {
                    // Sovereign
                    case 'report-sovereign-fs': reportContent = generateFinancialStatements(tbData); break;
                    case 'report-sovereign-zakat': reportContent = generateZakatReport(tbData); break;
                    
                    // Diagnostics
                    case 'report-diag-analysis': reportContent = generateFinancialAnalysis(tbData); break;
                    case 'report-diag-trends': reportContent = generateTrendAnalysis(tbData, prevTbData); break;
                    
                    // Strategic
                    case 'report-strategic-whatif': reportContent = generateWhatIfAnalysis(tbData); break;
                    
                    // Control
                    case 'report-control-aging': reportContent = generateAgingReport(tbData); break;
                    case 'report-control-expenses': reportContent = generateExpenseAnalysis(tbData); break;
                    case 'report-control-log': reportContent = generateAdjustmentsLog(auditFile); break;
                    
                    default:
                        reportContent = `<p class="text-center text-secondary p-4">التقرير المطلوب (${title}) قيد الإنشاء حاليًا ضمن محرك التقارير.</p>`;
                        break;
                }
                
                modalBodyEl.innerHTML = reportContent;
                reportModal.show();
            }

            function getFinalTrialBalance(auditFile) {
                const activeTB = auditFile.trialBalances[auditFile.activeEntityId]?.data || [];
                const adjustments = auditFile.adjustments[auditFile.activeEntityId] || [];
                return activeTB.map(acc => {
                    let adjAmount = adjustments.reduce((sum, aje) => {
                        if (aje.debitAccount === acc['اسم الحساب']) return sum + aje.amount;
                        if (aje.creditAccount === acc['اسم الحساب']) return sum - aje.amount;
                        return sum;
                    }, 0);
                    const bookBalance = (parseFloat(acc['رصيد آخر المدة مدين'] || 0) - parseFloat(acc['رصيد آخر المدة دائن'] || 0));
                    const finalBalance = bookBalance + adjAmount;
                    const classification = classifyAccount(acc);
                    return { ...acc, finalBalance, classification };
                });
            }

            function getPreviousTrialBalance(auditFile) {
                const prevTBKey = `prev_${auditFile.activeEntityId}`;
                const prevTB = auditFile.trialBalances[prevTBKey]?.data || [];
                return prevTB.map(acc => {
                    const balance = (parseFloat(acc['رصيد آخر المدة مدين'] || 0) - parseFloat(acc['رصيد آخر المدة دائن'] || 0));
                    return { ...acc, finalBalance: balance };
                });
            }

            function classifyAccount(account) {
                const accNum = account['رقم الحساب'] ? account['رقم الحساب'].toString() : '';
                const accName = account['اسم الحساب'] ? account['اسم الحساب'].toLowerCase() : '';
                if (accName.includes('عملاء') || accName.includes('مدينون')) return 'receivables';
                if (accName.includes('نقد') || accName.includes('بنك')) return 'cash';
                if (accNum.startsWith('1')) return 'assets';
                if (accNum.startsWith('2')) return 'liabilities';
                if (accNum.startsWith('3')) return 'equity';
                if (accNum.startsWith('4')) return 'revenue';
                if (accNum.startsWith('5') || accNum.startsWith('6')) return 'expenses';
                return 'unknown';
            }
            
            const formatCurrency = (val) => val.toLocaleString('ar-EG', {style:'currency', currency:'SAR'});

            function generateErrorHTML(title, message, buttonLink) {
                return `<div class="text-center p-4"><i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i><h4>${title}</h4><p class="text-secondary">${message}</p><a href="${buttonLink}" class="btn btn-primary mt-2">الانتقال إلى الصفحة المطلوبة</a></div>`;
            }

            const generateFinancialStatements = data => {
                const totals = { assets: 0, liabilities: 0, equity: 0, revenue: 0, expenses: 0 };
                data.forEach(acc => { if (totals.hasOwnProperty(acc.classification)) totals[acc.classification] += acc.finalBalance; });
                const netIncome = totals.revenue - totals.expenses;
                totals.equity += netIncome;
                return `<h5 class="font-family-display">قائمة المركز المالي</h5><table class="table table-sm"><tr><td>إجمالي الأصول</td><td class="text-end fw-bold">${formatCurrency(totals.assets)}</td></tr><tr><td>إجمالي الالتزامات</td><td class="text-end fw-bold">${formatCurrency(totals.liabilities)}</td></tr><tr><td>إجمالي حقوق الملكية</td><td class="text-end fw-bold">${formatCurrency(totals.equity)}</td></tr><tr class="table-group-divider"><td><strong>إجمالي ل. وح.م</strong></td><td class="text-end fw-bold">${formatCurrency(totals.liabilities + totals.equity)}</td></tr></table><hr><h5 class="font-family-display">قائمة الدخل</h5><table class="table table-sm"><tr><td>الإيرادات</td><td class="text-end">${formatCurrency(totals.revenue)}</td></tr><tr><td>المصروفات</td><td class="text-end">(${formatCurrency(Math.abs(totals.expenses))})</td></tr><tr class="table-group-divider"><td><strong>صافي الربح/الخسارة</strong></td><td class="text-end fw-bold">${formatCurrency(netIncome)}</td></tr></table>`;
            };
            const generateZakatReport = data => {
                const totals = { assets: 0, liabilities: 0, equity: 0, revenue: 0, expenses: 0 };
                data.forEach(acc => { if (totals.hasOwnProperty(acc.classification)) totals[acc.classification] += acc.finalBalance; });
                const netIncome = totals.revenue - totals.expenses;
                const zakatBase = totals.equity + netIncome;
                const zakatDue = zakatBase * 0.025;
                return `<p class="text-secondary small">ملاحظة: هذا حساب مبسط ومباشر من الأرصدة النهائية.</p><table class="table"><tr><td>صافي الربح المحاسبي</td><td class="text-end">${formatCurrency(netIncome)}</td></tr><tr><td>حقوق الملكية أول المدة</td><td class="text-end">${formatCurrency(totals.equity)}</td></tr><tr class="table-group-divider"><td><strong>الوعاء الزكوي (مبسط)</strong></td><td class="text-end fw-bold">${formatCurrency(zakatBase)}</td></tr><tr><td><strong>الزكاة المستحقة (2.5%)</strong></td><td class="text-end fw-bold text-success">${formatCurrency(zakatDue)}</td></tr></table>`;
            };
            const generateFinancialAnalysis = data => {
                const totals = { assets: 0, liabilities: 0, revenue: 0, expenses: 0 };
                data.forEach(acc => { if (totals.hasOwnProperty(acc.classification)) totals[acc.classification] += acc.finalBalance; });
                const currentAssets = totals.assets;
                const currentLiabilities = totals.liabilities;
                const netIncome = totals.revenue - totals.expenses;
                const currentRatio = currentLiabilities > 0 ? (currentAssets / currentLiabilities).toFixed(2) : 'N/A';
                const netMargin = totals.revenue > 0 ? ((netIncome / totals.revenue) * 100).toFixed(2) : 'N/A';
                return `<table class="table"><thead><tr><th>المؤشر</th><th>القيمة</th><th>الدلالة</th></tr></thead><tbody><tr><td><strong>نسبة السيولة الحالية</strong></td><td>${currentRatio}</td><td>قدرة الشركة على سداد التزاماتها قصيرة الأجل.</td></tr><tr><td><strong>هامش صافي الربح</strong></td><td>${netMargin}%</td><td>مقدار الربح المحقق عن كل ريال من المبيعات.</td></tr></tbody></table>`;
            };
            const generateTrendAnalysis = (currentData, prevData) => {
                if (prevData.length === 0) return '<p class="text-secondary text-center p-4">لا يمكن إنشاء التقرير. الرجاء رفع ميزان المراجعة للفترة السابقة في شاشة "استيعاب البيانات".</p>';
                let rows = '';
                currentData.forEach(acc => {
                    const prevAcc = prevData.find(p => p['اسم الحساب'] === acc['اسم الحساب']);
                    if (prevAcc) {
                        const change = acc.finalBalance - prevAcc.finalBalance;
                        const pctChange = prevAcc.finalBalance !== 0 ? ((change / Math.abs(prevAcc.finalBalance)) * 100).toFixed(1) : 'N/A';
                        if (Math.abs(change) > 0) {
                            rows += `<tr><td>${acc['اسم الحساب']}</td><td>${formatCurrency(prevAcc.finalBalance)}</td><td>${formatCurrency(acc.finalBalance)}</td><td>${formatCurrency(change)}</td><td>${pctChange}%</td></tr>`;
                        }
                    }
                });
                return `<table class="table table-sm"><thead><tr><th>الحساب</th><th>رصيد سابق</th><th>رصيد حالي</th><th>التغير</th><th>%</th></tr></thead><tbody>${rows}</tbody></table>`;
            };
            const generateWhatIfAnalysis = data => {
                const totals = { revenue: 0, expenses: 0 };
                data.forEach(acc => { if (totals.hasOwnProperty(acc.classification)) totals[acc.classification] += acc.finalBalance; });
                const netIncome = totals.revenue - totals.expenses;
                const newRevenue = totals.revenue * 1.10;
                const newNetIncome = newRevenue - totals.expenses;
                return `<p>محاكاة تأثير زيادة الإيرادات بنسبة 10%:</p><table class="table"><thead><tr><th>البند</th><th>الوضع الحالي</th><th>السيناريو المقترح</th></tr></thead><tbody><tr><td>الإيرادات</td><td>${formatCurrency(totals.revenue)}</td><td>${formatCurrency(newRevenue)}</td></tr><tr><td>صافي الربح</td><td>${formatCurrency(netIncome)}</td><td class="text-success fw-bold">${formatCurrency(newNetIncome)}</td></tr></tbody></table>`;
            };
            const generateAgingReport = data => {
                const receivables = data.find(acc => acc.classification === 'receivables');
                if (!receivables) return '<p class="text-secondary text-center p-4">لم يتم العثور على حساب "عملاء" أو "مدينون" في ميزان المراجعة.</p>';
                return `<p>هذا تقرير مبسط يعرض الرصيد الإجمالي للذمم المدينة:</p><h4>إجمالي رصيد العملاء: <span class="text-primary">${formatCurrency(receivables.finalBalance)}</span></h4><p class="text-secondary small mt-3">للحصول على تقرير تفصيلي، يجب ربط النظام بنظام الفوترة الفرعي.</p>`;
            };
            const generateExpenseAnalysis = data => {
                const expenses = data.filter(acc => acc.classification === 'expenses');
                if (expenses.length === 0) return '<p class="text-secondary text-center p-4">لا توجد حسابات مصروفات في ميزان المراجعة.</p>';
                let rows = '';
                expenses.forEach(exp => { rows += `<tr><td>${exp['اسم الحساب']}</td><td class="text-end">${formatCurrency(Math.abs(exp.finalBalance))}</td></tr>`; });
                return `<table class="table table-sm"><thead><tr><th>بند المصروف</th><th class="text-end">المبلغ</th></tr></thead><tbody>${rows}</tbody></table>`;
            };
            const generateAdjustmentsLog = (auditFile) => {
                const adjustments = auditFile.adjustments[auditFile.activeEntityId] || [];
                if (adjustments.length === 0) return '<p class="text-secondary text-center p-4">لا توجد قيود تسوية مسجلة لهذا الكيان.</p>';
                let rows = '';
                adjustments.forEach(aje => { rows += `<tr><td>${aje.desc}</td><td>${aje.debitAccount}</td><td>${aje.creditAccount}</td><td class="text-end">${formatCurrency(aje.amount)}</td></tr>`; });
                return `<table class="table table-striped"><thead><tr><th>الوصف</th><th>الحساب المدين</th><th>الحساب الدائن</th><th class="text-end">المبلغ</th></tr></thead><tbody>${rows}</tbody></table>`;
            };
        });
    </script>

</body>
</html>
